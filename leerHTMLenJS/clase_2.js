//la funcion document.querySelector nos permite seleccionar específicamente los elementos del html que nos interesaan, empleando la sintaxis de CSS, como su etiqueta y ya, su clase, su id.
// Tambien usamos los atributos de cada etiqueta cuando las inspeccionamos desde el navegadosr, tales como .value, .innerText, etc

const h1 = document.querySelector('h1'); 
const p = document.querySelector('p');
const pclass = document.querySelector('.parrafito');
const pid = document.querySelector('#pid');
const input = document.querySelector('input');


console.log(h1);
// al imprimir esto nos arroja tal cual el elemento h1 con su contenido dentro que es "<h1>Titulo</h1>" en este caso. Es decir nos muestra el HTML que renderiza el navegador

console.log({
    h1,
    p,
    pclass,
    pid,
    input
});
// usando las llaves dentro del console.log logramos acceder a cada elemento como un objeto donde podemos inspeccionar sus propiedades

console.log(input.value);
// aqui imprimimos el valor de este input en la consola. Eso lo sabemos por que imprimimos input como objeto más arriba, inspeccionamos el elemento y vimos la propiedad value, la cual nos arroja que tenemos por dentro de este elemento.

// Podemos manipular el HTMl desde JS:

h1.innerHTML = 'cambio de texto';
h1.innerHTML = 'cambio de texto <br /> mas un espacio'
// el problema de agregarle un innerHTML es que pueden haber usuarios maliciosos que puedan ejecutar codigo HTML que pueda violentar nuestro sitio. Mejor practica es usar innerText

h1.innerText = 'cambio de texo interno';
h1.innerText = 'cambio de texo interno <br /> mas un espacio';
//usando innerText, solo altera el texto de por si, sin ejecutar codigo HTML puro.


h1.setAttribute('class', 'red');
//con esto podemos cambiarle la clase a una etiqueta especificando el nombre del atributo, en este caso es una clase

console.log(h1.getAttribute('class'));
// aqui le estamos buscando cual es el valor que guarda el atributo

h1.classList = 'blue';
//con classList podemos agregarle clases nuevas a nuestra etiqueta

h1.classList.remove = 'blue';
//asi para eliminar la clase que le acabamos de agregar

// h1.classList.toggle('green')
// añade o quita cosas segun un estado u otro de nuestra etiqueta
// h1.classList.contains('green')
// arroja un true o false segun la clase que le estemos añadiendo




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































